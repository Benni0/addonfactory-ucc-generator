/*jslint node: true */
'use strict';

var grunt = require('grunt');
var stage = null;

var build = require("../classes/clBuild.js");

var buildTask = null;

switch (grunt.config.get('buildinfo.type')) {
    case 'CommonComponent':
        buildTask = new build.CommonComponentBuild(grunt.config.get('buildinfo.name'));
        break;
    case 'AppSuite':
        buildTask = new build.AppSuiteBuild();
        break;
    case 'InfraApp':
        buildTask = new build.InfraAppBuild();
        break;
    default:
        buildTask = new build.Build();
        break;
};

module.exports = function() {
    grunt.registerTask('buildTask', "Build Splunk App from Source",
        function(action) {

            var retval = true,
                action = action || 'copy';

            switch (action) {
                case "HOOK_prebuild":
                    buildTask.prebuild(grunt);
                    break;
                case "clean_before_build":
                    buildTask.clean_before_build(grunt);
                    break;
                case "download_dependencies":
                    buildTask.download_dependencies(grunt);
                    break;
                case "copy":
                    buildTask.copy(grunt);
                    break;
                case "update_license":
                    buildTask.update_license(grunt);
                    break;
                case "concat":
                    buildTask.concat(grunt);
                    break;
                case "patternReplace":
                    buildTask.patternReplace(grunt);
                    break;
                case "HOOK_prebundle":
                    buildTask.prebundle(grunt);
                    break;
                case "remove_sample":
                    buildTask.remove_sample(grunt);
                    break;
                case "compress":
                    buildTask.compress(grunt);
                    break;
                case "HOOK_postbundle":
                    buildTask.postbundle(grunt);
                    break;
                case "clean_after_build":
                    buildTask.clean_after_build(grunt);
                    break;
                case "HOOK_postbuild":
                    buildTask.postbuild(grunt);
                    break;
                case "HOOK_prepublish":
                    buildTask.prepublish(grunt);
                    break;
                case "publish":
                    buildTask.publish(grunt);
                    break;
                case "generate_app":
                    buildTask.generate_app(grunt);
                    break;
                case "compress_app":
                    buildTask.compress_app(grunt);
                    break;
                case "publish_app":
                    buildTask.publish_app(grunt);
                    break;
                case "generate_docs":
                    buildTask.generate_docs(grunt);
                    break;
		case "deploy":
		    buildTask.deploy(grunt);
		    break;
                default:
                    console.log(action + " not defined");
                    return false;
            }

        });

    return true;

};
