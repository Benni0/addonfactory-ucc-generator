{
  "_args": [
    [
      "css-color-converter@https://registry.npmjs.org/css-color-converter/-/css-color-converter-1.1.0.tgz",
      "/usr/local/bamboo/atlassian-bamboo-5.13.2/xml-data/build-dir/APPSC-BUN5-JOB1/web/node_modules/postcss-conditionals"
    ]
  ],
  "_from": "css-color-converter@>=1.0.2 <2.0.0",
  "_id": "css-color-converter@1.1.0",
  "_inCache": true,
  "_location": "/postcss-conditionals/css-color-converter",
  "_phantomChildren": {},
  "_requested": {
    "name": "css-color-converter",
    "raw": "css-color-converter@https://registry.npmjs.org/css-color-converter/-/css-color-converter-1.1.0.tgz",
    "rawSpec": "https://registry.npmjs.org/css-color-converter/-/css-color-converter-1.1.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/css-color-converter/-/css-color-converter-1.1.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/postcss-conditionals"
  ],
  "_resolved": "https://registry.npmjs.org/css-color-converter/-/css-color-converter-1.1.0.tgz",
  "_shasum": "c2e7d93c2e96c8ad8cb1ac7a1f2e49d8052ade36",
  "_shrinkwrap": null,
  "_spec": "css-color-converter@https://registry.npmjs.org/css-color-converter/-/css-color-converter-1.1.0.tgz",
  "_where": "/usr/local/bamboo/atlassian-bamboo-5.13.2/xml-data/build-dir/APPSC-BUN5-JOB1/web/node_modules/postcss-conditionals",
  "author": {
    "name": "Andy Jansson"
  },
  "bugs": {
    "url": "https://github.com/andyjansson/css-color-converter/issues"
  },
  "dependencies": {
    "color-convert": "^0.5.2",
    "color-name": "^1.0.0"
  },
  "description": "Converts CSS colors from one representation to another",
  "devDependencies": {},
  "homepage": "https://github.com/andyjansson/css-color-converter",
  "keywords": [
    "css",
    "color",
    "conversions",
    "converter"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "css-color-converter",
  "optionalDependencies": {},
  "readme": "# css-color-converter [![Build Status][ci-img]][ci]\r\n\r\nConverts CSS colors from one representation to another \r\n\r\n[ci-img]:  https://travis-ci.org/andyjansson/css-color-converter.svg\r\n[ci]:      https://travis-ci.org/andyjansson/css-color-converter\r\n\r\n## Installation\r\n\r\n```js\r\nnpm install css-color-converter\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nvar color = require('css-color-converter');\r\n\r\ncolor('rgb(255, 255, 255)').toHslString(); // hsl(0, 0%, 100%)\r\ncolor('rgba(255, 255, 255, 0.5)').toHslString(); // hsla(0, 0%, 100%, 0.5)\r\ncolor('blue').toRgbString(); // rgb(0, 0, 255)\r\ncolor('red').toHexString(); // #ff0000\r\n```\r\n## Methods\r\n\r\n### `fromRgb([r, g, b])`\r\n\r\n| parameter | type   | description   |\r\n| --------- | ------ | ------------- |\r\n| `r`       | int    | red (0-255)   |\r\n| `g`       | int    | green (0-255) |\r\n| `b`       | int    | blue (0-255)  |\r\n\r\n**Returns** `instance`\r\n\r\n### `fromRgba([r, g, b, a])`\r\n\r\n| parameter | type   | description   |\r\n| --------- | ------ | ------------- |\r\n| `r`       | int    | red (0-255)   |\r\n| `g`       | int    | green (0-255) |\r\n| `b`       | int    | blue (0-255)  |\r\n| `a`       | float  | alpha (0-1)   |\r\n\r\n**Returns** `instance`\r\n\r\n### `fromHsl([h, s, l])`\r\n\r\n| parameter | type   | description        |\r\n| --------- | ------ | ------------------ |\r\n| `h`       | int    | hue (0-360)        |\r\n| `s`       | int    | saturation (0-100) |\r\n| `l`       | int    | luminosity (0-100) |\r\n\r\n**Returns** `instance`\r\n\r\n### `fromHsla([h, s, l, a])`\r\n\r\n| parameter | type   | description        |\r\n| --------- | ------ | ------------------ |\r\n| `h`       | int    | hue (0-360)        |\r\n| `s`       | int    | saturation (0-100) |\r\n| `l`       | int    | luminosity (0-100) |\r\n| `a`       | float  | alpha (0-1)        |\r\n\r\n**Returns** `instance`\r\n\r\n### `toRgbString()`\r\n\r\n**Returns** `rgb()` or `rgba()`, depending on the alpha.\r\n\r\n### `toHslString()`\r\n\r\n**Returns** `hsl()` or `hsla()`, depending on the alpha.\r\n\r\n### `toHexString()`\r\n\r\n**Returns** 6-digit or 8-digit `hex`, depending on the alpha.\r\n\r\n### `toRgbaArray()`\r\n\r\n**Returns** `[r, g, b, a]` array.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/andyjansson/css-color-converter.git"
  },
  "scripts": {
    "test": "node test/test.js"
  },
  "version": "1.1.0"
}
