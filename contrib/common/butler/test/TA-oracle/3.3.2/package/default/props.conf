## Highly recommend collecting oracle logs off of the system that generated the data
## Oracle logs only record the database or "Node name" in the header of the log file...
## meaning this information does not persist down to individual records


########## Oracle 10g/11g/12c #########

### Audit log in text format ###

[oracle:audit:text]
SHOULD_LINEMERGE = False
LINE_BREAKER = ([\r\n]+)\w{3}\s+\w{3}\s+\d+\s+\d+\:\d+\:\d+\s+\d{4}
KV_MODE = None
EXTRACT-DB_UNIQUE_NAME = [\\|/]admin[\\|/](?<DB_UNIQUE_NAME>.*)[\\|/]adump[\\|/] in source

EVAL-app = "oracle"
REPORT-SESSIONID_text = SESSIONID_text
REPORT-ACTION_text = ACTION_text
REPORT-CLIENT_TERMINAL_text = CLIENT_TERMINAL_text
REPORT-CLIENT_USER_text = CLIENT_USER_text
REPORT-DATABASE_USER_text = DATABASE_USER_text
REPORT-PRIVILEGE_text = PRIVILEGE_text
REPORT-STATUS_text = STATUS_text
REPORT-ENTRYID_text = ENTRYID_text
REPORT-STATEMENT_text = STATEMENT_text
REPORT-USERHOST_text = USERHOST_text
REPORT-USERID_text = USERID_text
REPORT-RETURNCODE_text = RETURNCODE_text
REPORT-OBJNAME_text = OBJNAME_text
REPORT-OBJCREATOR_text = OBJCREATOR_text
REPORT-OSUSREID_text = OSUSERID_text
REPORT-PRIVUSED_text = PRIVUSED_text

REPORT-LOGOFFPREAD_text = LOGOFFPREAD_text
REPORT-LOGOFFLWRITE_text = LOGOFFLWRITE_text
REPORT-LOGOFFDEAD_text = LOGOFFDEAD_text
REPORT-SESSIONCPU_text = SESSIONCPU_text
REPORT-DBID_text = DBID_text


REPORT-COMMENTTEXT_text = COMMENTTEXT_text
REPORT-CLIENTIP_text = CLIENTIP_text
REPORT-CLIENTPORT_text = CLIENTPORT_text

LOOKUP-vendor_action = oracle_action_lookup ACTION OUTPUTNEW NAME as vendor_action
LOOKUP-returncode = oracle_returncode_lookup RETURNCODE OUTPUTNEW result
LOOKUP-privilege_used = oracle_privilege_lookup PRIVUSED OUTPUTNEW privilege as privused

EVAL-src = case(isnotnull(USERHOST), USERHOST, isnotnull(CLIENT_TERMINAL), CLIENT_TERMINAL) 
EVAL-src_user = case(isnotnull(OSUSERID), OSUSERID, isnotnull(CLIENT_USER), CLIENT_USER)
EVAL-user = case(isnotnull(USERID), USERID, isnotnull(DATABASE_USER), DATABASE_USER)
FIELDALIAS-dest = host as dest

EVAL-action = case((ACTION=100 OR ACTION=101 OR ACTION=102) AND RETURNCODE=0, "success", (ACTION=100 OR ACTION=101 OR ACTION=102) AND RETURNCODE!=0, "failure", ACTION="CONNECT" AND STATUS=0, "success", ACTION="CONNECT" AND STATUS!=0, "failure")


### 10g/12g/12c Mandatory/SYS/Standard/Fine Grained Audit trail in xml format ###

[oracle:audit:xml]
SHOULD_LINEMERGE = False
LINE_BREAKER = ([\r\n]+)<AuditRecord>
TIME_PREFIX= <Extended_Timestamp>
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%6N
KV_MODE = None
EXTRACT-DB_UNIQUE_NAME = [\\|/]admin[\\|/](?<DB_UNIQUE_NAME>.*)[\\|/]adump[\\|/] in source

EVAL-app = "oracle"
REPORT-AUDITTYPE_xml = AUDITTYPE_xml
REPORT-SESSIONID_xml = SESSIONID_xml
REPORT-STATEMENT_xml = STATEMENT_xml
REPORT-ENTRYID_xml = ENTRYID_xml
REPORT-USERID_xml = USERID_xml
FIELDALIAS-userid = USERID AS DATABASE_USER
REPORT-CLIENT_USER_xml = CLIENT_USER_xml
REPORT-OSUSERID_xml = OSUSERID_xml
REPORT-USERHOST_xml = USERHOST_xml
REPORT-OSPROCESS_xml = OSPROCESS_xml
REPORT-CLIENT_TERMINAL_xml = CLIENT_TERMINAL_xml
REPORT-INSTANCE_xml = INSTANCE_xml
REPORT-OBJCREATOR_xml = OBJCREATOR_xml
REPORT-OBJNAME_xml = OBJNAME_xml
REPORT-POLICYNAME_xml = POLICYNAME_xml
REPORT-NEWOWNER_xml = NEWOWNER_xml
REPORT-ACTION_xml = ACTION_xml
REPORT-STMTTYPE_xml = STMTTYPE_xml
REPORT-RETURNCODE_xml = RETURNCODE_xml
REPORT-AUTHPRIVILEGE_xml = AUTHPRIVILEGE_xml
REPORT-OSPRIVILEGE_xml = OSPRIVILEGE_xml
REPORT-GRANTEE_xml = GRANTEE_xml
REPORT-PRIVUSED_xml = PRIVUSED_xml
REPORT-PRIVGRANTED_xml = PRIVGRANTED_xml
REPORT-DBID_xml = DBID_xml
REPORT-SQLTEXT_xml = SQLTEXT_xml

REPORT-COMMENTTEXT_xml = COMMENTTEXT_xml
REPORT-CLIENTIP_xml = CLIENTIP_xml
REPORT-CLIENTPORT_xml = CLIENTPORT_xml

# The following fields are not mentioned in the schema but found in the trail files
#REPORT-LOGOFFPREAD_xml = LOGOFFPREAD_xml
#REPORT-LOGOFFLREAD_xml = LOGOFFLREAD_xml
#REPORT-LOGOFFLWRITE_xml = LOGOFFLWRITE_xml
#REPORT-LOGOFFDEAD_xml = LOGOFFDEAD_xml
#REPORT-SESSIONCPU_xml = SESSIONCPU_xml


LOOKUP-vendor_action = oracle_action_lookup ACTION OUTPUTNEW NAME as vendor_action
LOOKUP-privilege_used = oracle_privilege_lookup PRIVUSED OUTPUTNEW privilege as privused
LOOKUP-privilege_granted = oracle_privilege_lookup PRIVGRANTED OUTPUTNEW privilege as privgranted
LOOKUP-returncode = oracle_returncode_lookup RETURNCODE OUTPUTNEW result
LOOKUP-audittype = oracle_audit_type_lookup AUDITTYPE OUTPUTNEW audit

LOOKUP-fga_statement_type = oracle_statementtype_lookup STMTTYPE OUTPUTNEW statementtype as vendor_action

EVAL-src = case(isnotnull(USERHOST), USERHOST, isnotnull(CLIENT_TERMINAL), CLIENT_TERMINAL) 
EVAL-src_user = case(isnotnull(OSUSERID), OSUSERID, isnotnull(CLIENT_USER), CLIENT_USER)
EVAL-user = case(isnotnull(USERID), USERID, isnotnull(DATABASE_USER), DATABASE_USER)
FIELDALIAS-dest_xml = host as dest

EVAL-action = case((ACTION=100 OR ACTION=101 OR ACTION=102) AND RETURNCODE=0, "success", (ACTION=100 OR ACTION=101 OR ACTION=102) AND RETURNCODE!=0, "failure") 


### Alert log in text format ###

[oracle:alert:text]
SHOULD_LINEMERGE = False
LINE_BREAKER = ([\r\n]+)\w{3}\s+\w{3}\s+\d+\s+\d+\:\d+\:\d+\s+\d{4}
KV_MODE = None
EVAL-DB_UNIQUE_NAME = case(like(source, "%admin%bdump%"), replace(source, ".*[\\|/]admin[\\|/](.*)[\\|/]bdump[\\|/].*", "\1"), like(source, "%rdbms%trace%"), replace(source, ".*[\\|/]rdbms[\\|/](.*)[\\|/].*[\\|/]trace[\\|/].*", "\1"))
REPORT-ORACODE = ORACODE
LOOKUP-ORACODE = oracle_ora_code_lookup ORACODE OUTPUTNEW DESCRIPTION, CAUSE, ACTION
EVAL-app = "oracle"

### Alert log in xml format ###

[oracle:alert:xml]
SHOULD_LINEMERGE = False
LINE_BREAKER = ([\r\n]+)<msg
TIME_PREFIX= time=
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%3N
KV_MODE = None
EXTRACT-DB_UNIQUE_NAME = [\\|/]rdbms[\\|/](?<DB_UNIQUE_NAME>.*)[\\|/].*[\\|/]alert[\\|/] in source

EVAL-app = "oracle"
REPORT-ALERTORGID_xml = ALERTORGID_xml
REPORT-ALERTCOMPID_xml = ALERTCOMPID_xml
REPORT-ALERTTYPE_xml = ALERTTYPE_xml
REPORT-ALERTLEVEL_xml = ALERTLEVEL_xml
REPORT-ALERTHOST_xml = ALERTHOST_xml
REPORT-ALERTMSG_xml = ALERTMSG_xml
REPORT-ALERTMSGID_xml = ALERTMSGID_xml
REPORT-ORACODE = ORACODE
LOOKUP-ORACODE = oracle_ora_code_lookup ORACODE OUTPUTNEW DESCRIPTION, CAUSE, ACTION

### Listener log in xml format ###

[oracle:listener:text]
SHOULD_LINEMERGE = False
LINE_BREAKER = ([\r\n]+)\d+-\w{3}-\d{4}\s+\d+\:\d+\:\d+
KV_MODE = None
TIME_PREFIX = ^
MAX_TIMESTAMP_LOOKAHEAD = 2
TIME_FORMAT = %d-%b-%Y %H:%M:%S

EVAL-app = "oracle"
REPORT-ORACODE = ORACODE
REPORT-CLIENTIP_listener = CLIENTIP_listener
REPORT-DESTIP_listener = DESTIP_listener
REPORT-DESTPORT_listener = DESTPORT_listener
REPORT-CLIENTUSER_listener = CLIENTUSER_listener
REPORT-PROGRAM_listener = PROGRAM_listener
REPORT-STATUS_listener = STATUS_listener
EVAL-action = case(STATUS=0, "success", STATUS>0, "failure", 1=1, "unknown")
FIELDALIAS-app = PROGRAM as app
FIELDALIAS-dest = DESTIP as dest
FIELDALIAS-src = CLIENTIP as src
FIELDALIAS-src_user = CLIENT_USER as src_user
LOOKUP-ORACODE = oracle_ora_code_lookup ORACODE OUTPUTNEW DESCRIPTION, CAUSE, ACTION


### Listener log in xml format ###

[oracle:listener:xml]
SHOULD_LINEMERGE = False
LINE_BREAKER = ([\r\n]+)<msg
TIME_PREFIX = time=
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%3N
KV_MODE = None


EVAL-app = "oracle"
REPORT-ORGID_xml = ALERTORGID_xml
REPORT-COMPID_xml = ALERTCOMPID_xml
REPORT-TYPE_xml = ALERTTYPE_xml
REPORT-LEVEL_xml = ALERTLEVEL_xml
REPORT-HOST_xml = ALERTHOST_xml
REPORT-MSG_xml = ALERTMSG_xml
REPORT-ORACODE = ORACODE
REPORT-CLIENTIP_listener = CLIENTIP_listener
REPORT-DESTIP_listener = DESTIP_listener
REPORT-DESTPORT_listener = DESTPORT_listener
REPORT-CLIENTUSER_listener = CLIENTUSER_listener
REPORT-PROGRAM_listener = PROGRAM_listener
REPORT-STATUS_listener = STATUS_listener
EVAL-action = case(STATUS=0, "success", STATUS>0, "failure", 1=1, "unknown")
FIELDALIAS-app = PROGRAM as app
FIELDALIAS-dest = DESTIP as dest
FIELDALIAS-src = CLIENTIP as src
FIELDALIAS-src_user = CLIENT_USER as src_user

LOOKUP-ORACODE = oracle_ora_code_lookup ORACODE OUTPUTNEW DESCRIPTION, CAUSE, ACTION

[oracle:trace]
SHOULD_LINEMERGE = False
LINE_BREAKER = (^\*\*\*\s+\d+-\d+-\d+\s+\d+:\d+:\d+)
TRUNCATE = 99999999

EVAL-app = "oracle"
EXTRACT-DB_UNIQUE_NAME = [\\|/]rdbms[\\|/](?<DB_UNIQUE_NAME>.*)[\\|/].*[\\|/]trace[\\|/] in source
REPORT-ORACODE = ORACODE
LOOKUP-ORACODE = oracle_ora_code_lookup ORACODE OUTPUTNEW DESCRIPTION, CAUSE, ACTION

[oracle:incident]
SHOULD_LINEMERGE = False
LINE_BREAKER = (^\*\*\*\s+\d+-\d+-\d+\s+\d+:\d+:\d+)
TRUNCATE = 99999999
KV_MODE = None

EVAL-app = "oracle"
EXTRACT-DB_UNIQUE_NAME = [\\|/]rdbms[\\|/](?<DB_UNIQUE_NAME>.*)[\\|/].*[\\|/]incident[\\|/] in source
EXTRACT-INCIDENT = (?<INCIDENTID>\d+)\.trc$ in source

### The following metrics are collected from DB Connect
[oracle:database]
FIELDALIAS-dest = host as dest
FIELDALIAS-object = NAME as object
EVAL-product = "Oracle Database"
EVAL-vendor = "Oracle"
EVAL-app = "oracle"

[oracle:instance]
FIELDALIAS-instance_name = INSTANCE_NAME as instance_name
FIELDALIAS-instance_version = VERSION as instance_version
EVAL-product = "Oracle Database"
EVAL-vendor = "Oracle"
EVAL-start_time = round(now() - STARTUP_TIME, 2)
EVAL-availability = case(STATUS="OPEN", "Available", 1=1, "Not Available")
EVAL-app = "oracle"

[oracle:sga]
EVAL-sga_buffer_cache_size = case(NAME="SGA", TOTAL)
EVAL-sga_free_memory = case(NAME="SGA", FREE)
EVAL-sga_shared_memory = case(NAME="Shared pool", TOTAL)
EVAL-sga_shared_free_memory = case(NAME="Shared pool", FREE)
EVAL-app = "oracle"

[oracle:tablespaceMetrics]
FIELDALIAS-tablespace_name = TABLESPACE_NAME as tablespace_name
FIELDALIAS-free_bytes = FREE_BYTES as free_bytes
EVAL-storage = round(TOTAL_BYTES/1024.0/1024.0, 2)
EVAL-storage_free = round(FREE_BYTES/1024.0/1024.0, 2)
EVAL-storage_used = round(USED_BYTES/1024.0/1024.0, 2)
EVAL-storage_used_percent = round(USED_BYTES * 100 / TOTAL_BYTES, 2)
EVAL-storage_free_percent = round(FREE_BYTES * 100 / TOTAL_BYTES, 2)
EVAL-app = "oracle"

[oracle:session]
FIELDALIAS-session_id = SID as session_id
FIELDALIAS-session_status = STATUS as session_status
FIELDALIAS-user = USERNAME as user
FIELDALIAS-wait_time = WAIT_TIME as wait_time
FIELDALIAS-seconds_in_wait = SECONDS_IN_WAIT as seconds_in_wait
FIELDALIAS-wait_state = STATE as wait_state
FIELDALIAS-last_call_minute = LAST_CALL_ET as last_call_minute
FIELDALIAS-machine = MACHINE as machine
EVAL-app = "oracle"

REPORT-ORACLE_SUFFIX = ORACLE_SUFFIX

[oracle:sysPerf]
REPORT-ORACLE_SYS_PERF = ORACLE_SYS_PERF
SHOULD_LINEMERGE = False
EVAL-instance_reads = case(METRIC_NAME="Physical Read Total IO Requests Per Sec", VALUE)
EVAL-instance_writes = case(METRIC_NAME="Physical Write Total IO Requests Per Sec", VALUE)
EVAL-avg_executions = case(METRIC_NAME="Executions Per Sec", VALUE)
EVAL-cpu_load_percent = case(METRIC_NAME="Host CPU Utilization (%)" OR METRIC_NAME="Database CPU Time Ratio", VALUE)
EVAL-cpu_time = case(METRIC_NAME="Host CPU Usage Per Sec" OR METRIC_NAME="CPU Usage Per Sec" OR METRIC_NAME="CPU Usage Per Txn", VALUE/100)
EVAL-mem_committed = case(METRIC_NAME="Total PGA Allocated", VALUE/1024.0/1024.0)
EVAL-mem_used = case(METRIC_NAME="Total PGA Used by SQL Workareas", VALUE/1024.0/1024.0)
EVAL-thruput = case(METRIC_NAME="Network Traffic Volume Per Sec", VALUE/1024.0)
EVAL-read_ops = case(METRIC_NAME="Physical Read IO Requests Per Sec" OR METRIC_NAME="Physical Read Total IO Requests Per Sec" OR METRIC_NAME="Physical Reads Direct Lobs Per Sec" OR METRIC_NAME="Physical Reads Direct Lobs Per Txn" OR METRIC_NAME="Physical Reads Direct Per Sec" OR METRIC_NAME="Physical Reads Direct Per Txn" OR METRIC_NAME="Physical Reads Per Sec" OR METRIC_NAME="Physical Reads Per Txn", VALUE)
EVAL-write_ops = case(METRIC_NAME="Physical Write IO Requests Per Sec" OR METRIC_NAME="Physical Write Total IO Requests Per Sec" OR METRIC_NAME="Physical Writes Direct Lobs Per Sec" OR METRIC_NAME="Physical Writes Direct Lobs Per Txn" OR METRIC_NAME="Physical Writes Direct Per Sec" OR METRIC_NAME="Physical Writes Direct Per Txn" OR METRIC_NAME="Physical Writes Per Sec" OR METRIC_NAME="Physical Writes Per Txn", VALUE)
EVAL-read_blocks = case(METRIC_NAME="Physical Read Bytes Per Sec" OR METRIC_NAME="Physical Read Total Bytes Per Sec", VALUE/4096)
EVAL-write_blocks = case(METRIC_NAME="Physical Write Bytes Per Sec" OR METRIC_NAME="Physical Write Total Bytes Per Sec", VALUE/4096)
FIELDALIAS-dest = METRIC_NAME as dest
EVAL-app = "oracle"

[oracle:osPerf]
REPORT-ORACLE_OS_PERF = ORACLE_OS_PERF
SHOULD_LINEMERGE = False
EVAL-app = "oracle"

[oracle:libraryCachePerf]
REPORT-ORACLE_LIB_CACHE = ORACLE_LIB_CACHE
SHOULD_LINEMERGE = False
EVAL-app = "oracle"

[oracle:dbFileIoPerf]
REPORT-ORACLE_DBFILEIO_PERF = ORACLE_DBFILEIO_PERF
SHOULD_LINEMERGE = False
EVAL-app = "oracle"
